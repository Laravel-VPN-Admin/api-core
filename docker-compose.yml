version: "3.5"

services:

  core:
    image: laravelvpnadmin/api-core
    restart: unless-stopped
    ports:
    - 80:80
    volumes:
    - ./logs/api-core:/var/log/apache2
    - ./sites/api-core/storage:/app/storage
    - ./sites/api-core/bootstrap/cache:/app/bootstrap/cache
#    - ../api-core:/app

  queue:
    image: laravelvpnadmin/api-core
    restart: unless-stopped
    environment:
    - CONTAINER_ROLE=queue
    volumes:
    - ./logs/api-core:/var/log/apache2
    - ./sites/api-core/storage:/app/storage
    - ./sites/api-core/bootstrap/cache:/app/bootstrap/cache
#    - ../api-core:/app

  scheduler:
    image: laravelvpnadmin/api-core
    restart: unless-stopped
    environment:
    - CONTAINER_ROLE=scheduler
    volumes:
    - ./logs/api-core:/var/log/apache2
    - ./sites/api-core/storage:/app/storage
    - ./sites/api-core/bootstrap/cache:/app/bootstrap/cache
#    - ../api-core:/app

#    openvpn:
#      image: laravel-vpn-admin/docker-openvpn:latest

#    l2tp:
#      image: laravel-vpn-admin/docker-l2tp:latest

  mariadb:
    restart: unless-stopped
    image: mariadb:10
    ports:
      - 127.0.0.1:3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: api-core
      MYSQL_USER: root
      MYSQL_PASSWORD: pass
    volumes:
      - ./databases/mariadb:/var/lib/mysql

  phpmyadmin:
    restart: unless-stopped
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - 127.0.0.1:8080:80
    environment:
      PMA_HOST: mariadb
      PMA_USER: pma
      PMA_PASSWORD: pmapass